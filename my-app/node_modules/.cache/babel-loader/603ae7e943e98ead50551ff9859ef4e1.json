{"ast":null,"code":"import { addMessageBodyCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage,\n    newMessageBody: state.dialogsPage.newMessageBody\n  };\n};\n\nlet MapDispatchToProps = dispatch => {\n  return {\n    addMessageBodyCreator: () => {\n      dispatch(addMessageBodyCreator());\n    },\n    updateNewMessageBodyCreator: body => {\n      dispatch(updateNewMessageBodyCreator(body));\n    }\n  };\n};\n\n_c = MapDispatchToProps;\nconst DialogsContainer = connect(mapStateToProps)(Dialogs);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDispatchToProps\");","map":{"version":3,"sources":["/Users/horodechna.julia/Documents/git/react/social/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["addMessageBodyCreator","updateNewMessageBodyCreator","Dialogs","connect","mapStateToProps","state","dialogsPage","newMessageBody","MapDispatchToProps","dispatch","body","DialogsContainer"],"mappings":"AACA,SAASA,qBAAT,EAAgCC,2BAAhC,QAAmE,6BAAnE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAIA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHC,IAAAA,cAAc,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAF/B,GAAP;AAIH,CALD;;AAMA,IAAIC,kBAAkB,GAAGC,QAAD,IAAc;AAClC,SAAO;AACHT,IAAAA,qBAAqB,EAAE,MAAM;AACzBS,MAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AACH,KAHE;AAIHC,IAAAA,2BAA2B,EAAGS,IAAD,IAAU;AACnCD,MAAAA,QAAQ,CAACR,2BAA2B,CAACS,IAAD,CAA5B,CAAR;AACH;AANE,GAAP;AASH,CAVD;;KAAIF,kB;AAWJ,MAAMG,gBAAgB,GAAGR,OAAO,CAACC,eAAD,CAAP,CAEnBF,OAFmB,CAAzB;AAIA,eAAeS,gBAAf","sourcesContent":["\nimport { addMessageBodyCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        newMessageBody: state.dialogsPage.newMessageBody\n    }\n}\nlet MapDispatchToProps= (dispatch) => {\n    return {\n        addMessageBodyCreator: () => {\n            dispatch(addMessageBodyCreator())\n        },\n        updateNewMessageBodyCreator: (body) => {\n            dispatch(updateNewMessageBodyCreator(body))\n        }\n\n    }\n}\nconst DialogsContainer = connect(mapStateToProps,\n    \n    )(Dialogs)\n\nexport default DialogsContainer"]},"metadata":{},"sourceType":"module"}