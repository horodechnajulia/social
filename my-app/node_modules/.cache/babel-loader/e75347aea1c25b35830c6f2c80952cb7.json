{"ast":null,"code":"var _jsxFileName = \"/Users/horodechna.julia/Documents/git/react/social/my-app/src/components/Users/UsersContainer.jsx\";\nimport { connect } from 'react-redux';\nimport { follow, setUsers, unFollow, setCurrentPage, setTotalUsersCountActionCreator, toggleIsFetchingActionCreator } from '../../redux/users-reducer';\nimport React from 'react';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersAPIContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        setTotalUsersCount: this.props.setTotalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        totalUsersCount: this.props.totalUsersCount,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followActionCreator(userId));\n    },\n    unfollow: userId => {\n      dispatch(unFollowActionCreator(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersActionCreator(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageActionCreator(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountActionCreator(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingActionCreator(isFetching));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow: follow,\n  unfollow: unfollow,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCount: setTotalUsersCount,\n  toggleIsFetching: toggleIsFetching\n})(UsersAPIContainer);\nexport default UsersContainer;","map":{"version":3,"sources":["/Users/horodechna.julia/Documents/git/react/social/my-app/src/components/Users/UsersContainer.jsx"],"names":["connect","follow","setUsers","unFollow","setCurrentPage","setTotalUsersCountActionCreator","toggleIsFetchingActionCreator","React","axios","Users","Preloader","UsersAPIContainer","Component","onPageChanged","pageNumber","props","toggleIsFetching","get","pageSize","then","response","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId","followActionCreator","unFollowActionCreator","setUsersActionCreator","setCurrentPageActionCreator","UsersContainer"],"mappings":"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","sourcesContent":["\nimport { connect } from 'react-redux'\nimport { follow, setUsers, unFollow, setCurrentPage, setTotalUsersCountActionCreator, toggleIsFetchingActionCreator } from '../../redux/users-reducer';\nimport React from 'react'\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\n\n\nclass UsersAPIContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n                this.props.setTotalUsersCount(response.data.totalCount);\n            })\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.toggleIsFetching(true);\n        this.props.setCurrentPage(pageNumber);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false);\n                this.props.setUsers(response.data.items);\n            })\n    }\n\n    render() {\n        return <div>\n            {this.props.isFetching ?\n                <Preloader />\n                : null}\n            <Users setTotalUsersCount={this.props.setTotalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                totalUsersCount={this.props.totalUsersCount}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n\n            />\n        </div>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followActionCreator(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unFollowActionCreator(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersActionCreator(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageActionCreator(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountActionCreator(totalCount))\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingActionCreator(isFetching))\n        }\n    }\n}\nconst UsersContainer = connect(mapStateToProps, {\n    follow: follow,\n    unfollow: unfollow,\n    setUsers: setUsers,\n    setCurrentPage: setCurrentPage,\n    setTotalUsersCount: setTotalUsersCount,\n    toggleIsFetching: toggleIsFetching\n})(UsersAPIContainer)\nexport default UsersContainer"]},"metadata":{},"sourceType":"module"}